name: Rust

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/docs/**/*"
      - "**/*.info"
      - "**/*.preview.png"
      - "README.md"

  pull_request:
    branches: [main]
    paths-ignore:
      - "**/docs/**/*"
      - "**/*.info"
      - "**/*.preview.png"

env:
  NAME: "Rust Test"
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code and LFS
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run Tests
        run: cargo test --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code and LFS
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Setup
        uses: ./.github/actions/setup

      - name: Compile Project
        run: make compile

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: packages/gh-pagify/dist

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request'  || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'canary')) }}
          tags: mbround18/vtt-maps:static-site

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment: aws-s3
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-west-2

      - name: Upload to S3
        run: |
          aws                         \
            s3 sync                   \
            ./                        \
            s3://mbruno-static-files/dnd-apps/vtt-maps \
            --request-payer requester
