name: Rust

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/docs/**/*"
      - "**/*.info"
      - "**/*.preview.png"
      - "README.md"

  pull_request:
    branches: [main]
    paths-ignore:
      - "**/docs/**/*"
      - "**/*.info"
      - "**/*.preview.png"

env:
  NAME: "Rust Test"
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code and LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Run Tests
        run: cargo test --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code and LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache Cargo Binaries (trunk and wasm-bindgen-cli)
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bin-

      - name: Install Trunk and wasm-bindgen
        run: |
          if ! command -v trunk &> /dev/null; then
            cargo install trunk
          fi
          if ! command -v wasm-bindgen-cli &> /dev/null; then
            cargo install wasm-bindgen-cli
          fi

      - name: Compile with Trunk for SSR
        run: |
          trunk build packages/gh-pagify/index.html \
            --dist packages/gh-pagify/dist \
            && cargo run --release --bin ssr-catalog

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: packages/gh-pagify/dist/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment: aws-s3
    steps:
      - name: Checkout code and LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-west-2

      - name: Upload to S3
        run: |
          aws                         \
            s3 sync                   \
            packages/gh-pagify/dist   \
            s3://mbruno-static-files/dnd-apps/vtt-maps \
            --request-payer requester
